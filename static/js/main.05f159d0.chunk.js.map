{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","key","onKeyUp","event","setState","document","addEventListener","this","removeEventListener","className","React","Component","ReactDOM","render","getElementById"],"mappings":"oNAMaA,EAAb,4MACEC,MAAyB,CACvBC,IAAK,2BAFT,EAaEC,QAAU,SAACC,GACLA,GACF,EAAKC,SAAS,CAACH,IAAI,4BAAD,OAA8BE,EAAMF,IAApC,QAfxB,uDAKE,WACEI,SAASC,iBAAiB,QAASC,KAAKL,WAN5C,kCASE,WACEG,SAASG,oBAAoB,QAASD,KAAKL,WAV/C,oBAmBE,WACE,IAAQD,EAAQM,KAAKP,MAAbC,IAER,OACE,qBAAKQ,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SAA6BR,UAxBrC,GAAyBS,IAAMC,W,MCD/BC,IAASC,OACP,cAAC,EAAD,IACAR,SAASS,eAAe,W","file":"static/js/main.05f159d0.chunk.js","sourcesContent":["import React from 'react';\n\ntype State = {\n  key: string\n};\n\nexport class App extends React.Component<{}, State> {\n  state: Readonly<State> = {\n    key: 'Nothing was pressed yet',\n  };\n\n  componentDidMount() {\n    document.addEventListener('keyup', this.onKeyUp);\n  };\n\n  componentWillUnmount() {\n    document.removeEventListener('keyup', this.onKeyUp);\n  }\n\n  onKeyUp = (event: KeyboardEvent) => {\n    if (event) {\n      this.setState({key: `The last pressed key is [${event.key}]` })\n    }\n  };\n\n  render() {\n    const { key } = this.state;\n\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">{key}</p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}